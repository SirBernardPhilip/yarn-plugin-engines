/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-engines",
factory: function (require) {
var plugin=(()=>{var T=Object.create,h=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames,w=Object.getOwnPropertySymbols,q=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable;var P=(n,e,r)=>e in n?h(n,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[e]=r,v=(n,e)=>{for(var r in e||(e={}))x.call(e,r)&&P(n,r,e[r]);if(w)for(var r of w(e))U.call(e,r)&&P(n,r,e[r]);return n};var $=n=>h(n,"__esModule",{value:!0});var i=n=>{if(typeof require!="undefined")return require(n);throw new Error('Dynamic require of "'+n+'" is not supported')};var W=(n,e)=>{for(var r in e)h(n,r,{get:e[r],enumerable:!0})},M=(n,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of S(e))!x.call(n,t)&&t!=="default"&&h(n,t,{get:()=>e[t],enumerable:!(r=V(e,t))||r.enumerable});return n},s=n=>M($(h(n!=null?T(q(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var B={};W(B,{default:()=>A});var o=s(i("@yarnpkg/core")),a;(function(r){r.Yarn="Yarn",r.Console="Console"})(a||(a={}));var f=class{constructor(e){this.throwWrongEngineError=(e,r)=>{let t=this.formatErrorMessage(e,r);this.throwError(t)};this.throwError=e=>{switch(this.errorReporter){case a.Yarn:this.reportYarnError(e);break;case a.Console:default:this.reportConsoleError(e);break}};this.reportYarnError=e=>{throw new o.ReportError(o.MessageName.UNNAMED,e)};this.reportConsoleError=e=>{console.error(e),process.exit(1)};this.formatErrorMessage=(e,r)=>{let{configuration:t}=this.project,c=o.formatUtils.applyStyle(t,o.formatUtils.pretty(t,this.engine,"green"),2),g=o.formatUtils.pretty(t,e,"cyan"),p=o.formatUtils.pretty(t,r,"cyan"),k=`The current ${c} version ${g} does not satisfy the required version ${p}.`;return o.formatUtils.pretty(t,k,"red")};this.project=e.project,this.errorReporter=e.errorReporter}};var m=s(i("fs")),R=s(i("path")),d=s(i("semver")),N=s(i("@yarnpkg/fslib")),l=s(i("@yarnpkg/core"));var E=class extends f{constructor(){super(...arguments);this.resolveNvmRequiredVersion=()=>{let{configuration:e,cwd:r}=this.project,t=(0,R.resolve)(N.npath.fromPortablePath(r),".nvmrc"),c=l.formatUtils.applyStyle(e,l.formatUtils.pretty(e,this.engine,"green"),2);if(!(0,m.existsSync)(t)){this.throwError(l.formatUtils.pretty(e,`Unable to verify the ${c} version. The .nvmrc file does not exist.`,"red"));return}let g=(0,m.readFileSync)(t,"utf-8").trim();if((0,d.validRange)(g))return g;let p=l.formatUtils.pretty(e,".nvmrc","yellow");this.throwError(l.formatUtils.pretty(e,`Unable to verify the ${c} version. The ${p} file contains an invalid semver range.`,"red"))}}get engine(){return"Node"}verifyEngine(e){let r=e.node;r!=null&&(r===".nvmrc"&&(r=this.resolveNvmRequiredVersion()),(0,d.satisfies)(process.version,r,{includePrerelease:!0})||this.throwWrongEngineError(process.version.replace(/^v/i,""),r.replace(/^v/i,"")))}};var b=s(i("semver")),u=s(i("@yarnpkg/core"));var y=class extends f{get engine(){return"Yarn"}verifyEngine(e){let r=e.yarn;r!=null&&((0,b.satisfies)(u.YarnVersion,r,{includePrerelease:!0})||this.throwWrongEngineError(u.YarnVersion,r))}};var Y=(n,e)=>r=>{var C;if(process.env.PLUGIN_YARN_ENGINES_DISABLE!=null)return;let t=r.getWorkspaceByCwd(r.cwd).manifest.raw,c=r.getWorkspaceByCwd(r.configuration.startingCwd).manifest.raw;console.log("parent",t.engines),console.log("child",c.engines),console.log("onlyParent",e);let g=(C=e?t.engines:v(v({},t.engines),c.engines))!=null?C:{};console.log("engines",g);let p={project:r,errorReporter:n};[new E(p),new y(p)].forEach(j=>j.verifyEngine(g))},O={hooks:{validateProject:Y(a.Yarn,!0),setupScriptEnvironment:Y(a.Console,!1)}},A=O;return B;})();
return plugin;
}
};
