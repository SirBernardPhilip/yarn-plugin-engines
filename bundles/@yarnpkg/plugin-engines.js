/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-engines",
factory: function (require) {
var plugin=(()=>{var V=Object.create,h=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames,P=Object.getOwnPropertySymbols,$=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty,W=Object.prototype.propertyIsEnumerable;var N=(n,e,r)=>e in n?h(n,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[e]=r,v=(n,e)=>{for(var r in e||(e={}))R.call(e,r)&&N(n,r,e[r]);if(P)for(var r of P(e))W.call(e,r)&&N(n,r,e[r]);return n};var _=n=>h(n,"__esModule",{value:!0});var i=n=>{if(typeof require!="undefined")return require(n);throw new Error('Dynamic require of "'+n+'" is not supported')};var M=(n,e)=>{for(var r in e)h(n,r,{get:e[r],enumerable:!0})},O=(n,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of U(e))!R.call(n,t)&&t!=="default"&&h(n,t,{get:()=>e[t],enumerable:!(r=q(e,t))||r.enumerable});return n},s=n=>O(_(h(n!=null?V($(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var I={};M(I,{default:()=>B});var o=s(i("@yarnpkg/core")),a;(function(r){r.Yarn="Yarn",r.Console="Console"})(a||(a={}));var l=class{constructor(e){this.throwWrongEngineError=(e,r)=>{let t=this.formatErrorMessage(e,r);this.throwError(t)};this.throwError=e=>{switch(this.errorReporter){case a.Yarn:this.reportYarnError(e);break;case a.Console:default:this.reportConsoleError(e);break}};this.reportYarnError=e=>{throw new o.ReportError(o.MessageName.UNNAMED,e)};this.reportConsoleError=e=>{console.error(e),process.exit(1)};this.formatErrorMessage=(e,r)=>{let{configuration:t}=this.project,c=o.formatUtils.applyStyle(t,o.formatUtils.pretty(t,this.engine,"green"),2),g=o.formatUtils.pretty(t,e,"cyan"),f=o.formatUtils.pretty(t,r,"cyan"),k=`The current ${c} version ${g} does not satisfy the required version ${f}.`;return o.formatUtils.pretty(t,k,"red")};this.project=e.project,this.errorReporter=e.errorReporter}};var m=s(i("fs")),b=s(i("path")),d=s(i("semver")),Y=s(i("@yarnpkg/fslib")),p=s(i("@yarnpkg/core"));var E=class extends l{constructor(){super(...arguments);this.resolveNvmRequiredVersion=()=>{let{configuration:e,cwd:r}=this.project,t=(0,b.resolve)(Y.npath.fromPortablePath(r),".nvmrc"),c=p.formatUtils.applyStyle(e,p.formatUtils.pretty(e,this.engine,"green"),2);if(!(0,m.existsSync)(t)){this.throwError(p.formatUtils.pretty(e,`Unable to verify the ${c} version. The .nvmrc file does not exist.`,"red"));return}let g=(0,m.readFileSync)(t,"utf-8").trim();if((0,d.validRange)(g))return g;let f=p.formatUtils.pretty(e,".nvmrc","yellow");this.throwError(p.formatUtils.pretty(e,`Unable to verify the ${c} version. The ${f} file contains an invalid semver range.`,"red"))}}get engine(){return"Node"}verifyEngine(e){let r=e.node;r!=null&&(r===".nvmrc"&&(r=this.resolveNvmRequiredVersion()),(0,d.satisfies)(process.version,r,{includePrerelease:!0})||this.throwWrongEngineError(process.version.replace(/^v/i,""),r.replace(/^v/i,"")))}};var j=s(i("semver")),u=s(i("@yarnpkg/core"));var y=class extends l{get engine(){return"Yarn"}verifyEngine(e){let r=e.yarn;r!=null&&((0,j.satisfies)(u.YarnVersion,r,{includePrerelease:!0})||this.throwWrongEngineError(u.YarnVersion,r))}};var T=(n,e)=>(r,t)=>{var C,w;if(process.env.PLUGIN_YARN_ENGINES_DISABLE!=null)return;let c=r.getWorkspaceByCwd(r.cwd).manifest.raw,g=r.getWorkspaceByCwd(r.configuration.startingCwd).manifest.raw,f=(C=e?c.engines:v(v({},c.engines),g.engines))!=null?C:{};if(!(e?[]:(w=g.ignoreEngines)!=null?w:[]).includes(t.npm_lifecycle_event)){let x={project:r,errorReporter:n};[new E(x),new y(x)].forEach(S=>S.verifyEngine(f))}},A={hooks:{validateProject:T(a.Yarn,!0),setupScriptEnvironment:T(a.Console,!1)}},B=A;return I;})();
return plugin;
}
};
